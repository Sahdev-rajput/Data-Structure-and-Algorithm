#include <iostream>
#include <math.h>
using namespace std;
class Term
{
public:
	int coeff;
	int exp;
};
class Polynomial
{
public:
	int n;
	Term* t;
	Polynomial(int n)
	{
		this->n = n;
		t = new Term[this->n];
	}
	void create();
	void display();
	int value(int x);
	Polynomial add(Polynomial q);
};
void Polynomial::create()
{
	for (int i = 0; i < n; i++)
	{
		cout << "Enter the " << i + 1 << "th term";
		cin >> t[i].coeff >> t[i].exp;
    }
}
void Polynomial::display()
{
	cout << "Polynomial is : ";
	for (int i = 0; i < n; i++)
	{
		cout<< t[i].coeff<<"x^"<<t[i].exp<<"+ ";
	}
}
int Polynomial::value(int x)
{
	int sum = 0;
	for (int i = 0; i < n; i++)
	{
		sum += t[i].coeff * pow(x, t[i].exp);
	}
	return sum;
}
Polynomial Polynomial::add(Polynomial q)
{
	int i = 0, j = 0, k = 0;
	Polynomial* poly=new Polynomial(n+q.n);
	while (i < n && j < q.n)
	{
		if (t[i].exp > q.t[j].exp)
		{
			poly->t[k++] = t[i++];
		}
		else if (t[i].exp < q.t[j].exp)
		{
			poly->t[k++] = q.t[j++];
		}
		else
		{
			poly->t[k].exp = t[i].exp;
			poly->t[k++].coeff = t[i++].coeff + q.t[j++].coeff;
		}
	}
	poly->n = k;
	return *poly;
}
int main()
{
	Polynomial p(3);
	Polynomial q(5);
	p.create();
	q.create();
	p.display();
	q.display();
	cout <<endl<< p.value(1) << endl;
	Polynomial result = p.add(q);
	cout << endl;
	cout << "Addition: ";
	result.display();
}
